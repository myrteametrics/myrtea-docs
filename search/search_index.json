{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs help</code> - Print this help message.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"_not_imported/codeblock.highlight/","title":"Codeblock.highlight","text":"<pre><code>\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"_not_imported/codeblock.tabs/","title":"Codeblock.tabs","text":"<p>``` bash tab=\"Bash\"</p>"},{"location":"_not_imported/codeblock.tabs/#binbash","title":"!/bin/bash","text":"<p>echo \"Hello world!\" <pre><code>``` c tab=\"C\"\n#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n}\n</code></pre></p> <p>``` c++ tab=\"C++\"</p>"},{"location":"_not_imported/codeblock.tabs/#include","title":"include  <p>int main() {   std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;   return 0; } <pre><code>``` c# tab=\"C#\"\nusing System;\n\nclass Program {\n  static void Main(string[] args) {\n    Console.WriteLine(\"Hello world!\");\n  }\n}\n</code></pre></p>","text":""},{"location":"_not_imported/mermaid.example/","title":"Mermaid example","text":"sequenceDiagram   Scheduler -&gt;&gt; Engine API: Trigger forecasted baseline calculation   Engine API -&gt;&gt;+ Explainer API: Trigger forecasted baseline calculation   Explainer API -&gt;&gt;+ Postgres(explainer): Get dataset   Postgres(explainer) -&gt;&gt;- Explainer API: &lt;TimeSeriesDataset&gt;    Explainer API -&gt;&gt;+ Postgres(explainer): Get dataset rows   Postgres(explainer) -&gt;&gt;- Explainer API: &lt;TimeSeriesDatasetRow[]&gt;   Explainer API -&gt;&gt; Explainer API: Build pandas dataframe from dataset rows    Explainer API -&gt;&gt;+ Postgres(explainer): Get dataset Prophet model   Postgres(explainer) -&gt;&gt;- Explainer API: &lt;ProphetModel&gt;    Explainer API -&gt; Explainer API: Fit the Prophet model with the dataframe   Explainer API -&gt; Explainer API: Predict a full day forecasted baseline   Explainer API -&gt; Explainer API: Serialize the fitted model (pickle)   Explainer API --&gt; Postgres(explainer): Save the fitted prophet model &lt;ProphetModel&gt;   deactivate Explainer API"},{"location":"_not_imported/table.formatting/","title":"Table formatting","text":""},{"location":"_not_imported/table.formatting/#inline-hack-for-colspan","title":"Inline hack for colspan","text":"Operator Field Value Value 2 Comment <code>Between</code> Check if a field value is between two values provided in input <code>Script</code> Special \"free text input\" for advanced script {style=\"display:none;\"} {style=\"display:none;\"} Check if the script output is true <p>Use <code>| text {colspan=\"2\"}</code> followed by <code>| {style=\"display:none;\"}</code> as many time as the colspan needs it ( <code>size_colspan - 1</code> )</p>"},{"location":"angular/custom-module/","title":"Custom module","text":"<p>Warning</p> <p>The <code>custom</code> module is dedicated to integration. This one and only module can be edited in the angular tree. Other modules are strictly reserved to the editor to ensure proper version upgrade.</p>"},{"location":"angular/custom-module/#tree","title":"Tree","text":"Name Type Description components folder Contains custom's components services folder Contains custom's services models folder Contains custom's models custom-routing.ts file Contains custom's routes custom-module.ts file Carry the modifications to myrtea custom.scss file Override myrtea-design-system, bootstrap or angular's comonents"},{"location":"angular/custom-module/#create-component","title":"Create component","text":"<pre><code>ng g c custom/components/my-component\n</code></pre>"},{"location":"angular/custom-module/#create-service","title":"Create service","text":"<pre><code>ng g s custom/services/my-service\n</code></pre>"},{"location":"angular/getting-started/","title":"Getting started","text":""},{"location":"angular/getting-started/#launch-the-project","title":"Launch the project","text":"<pre><code>npm install\n</code></pre> <pre><code>npm start\n</code></pre> <p>In case command <code>ng</code> is not installed <code>node_modules/@angular/cli/bin/ng</code> can be used.</p>"},{"location":"angular/components/chart-components/","title":"Chart components","text":""},{"location":"angular/components/chart-components/#donut-chart-component","title":"donut-chart-component","text":"<p>This component waiting for several arguments :</p> Name Type Description optional <code>data</code> <code>number[]</code> Set of data false <code>labels</code> <code>string[]</code> Label for wich element of the data set false <code>title</code> <code>string</code> Graph's title true <code>globalLabel</code> <code>string</code> Label display on the center of donut true <code>hideLabel</code> <code>boolean</code> hide label true <code>labelClickEmitter</code> <code>(label: string) =&gt; void</code> function who catch user click on label true <p>```typescript tab=\"Typescript\"</p> <pre><code>```html tab=\"HTML\"\n&lt;app-donut-chart\n    [data]=\"dataDonut\"\n    globalLabel=\"total\"\n    [labels]=\"labelsDonut\"\n    [title]=\"titleDonut\"\n    hideLabel=\"true\"\n    (labelClickEmitter)=\"actionOnLabelClick($event)\"&gt;\n&lt;/app-donut-chart&gt;\n</code></pre>"},{"location":"angular/components/chart-components/#line-chart-component","title":"line-chart-component","text":"<p>This component waiting for several arguments :</p> Name Type Description optional <code>series</code> <code>Serie[]</code> Set of data false <code>title</code> <code>string</code> Graph's title true <pre><code>export interface Serie {\nname: string;\ntype: 'area' | 'line';\ndata: number[];\n}\n</code></pre> <p>One chart example with area and line series combined:</p> <p>```typescript tab=\"Typescript\" public series = [     {         name: 'Chimpanze',         type: 'area',         data: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33]     },     {         name: 'Baleine',         type: 'line',         data: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43]     } ]; <pre><code>```html tab=\"HTML\"\n&lt;app-line-chart\n    *ngIf=\"series\"\n    [title]=\"titleLine\"\n    [series]=\"series\"&gt;\n&lt;/app-line-chart&gt;\n</code></pre></p>"},{"location":"angular/components/components/","title":"Shared components","text":""},{"location":"angular/components/components/#confirmation-pop-upcomponent","title":"Confirmation-pop-up.component","text":"<p>This component for display confirmation window to user, this component waiting for a title and a content. You can find more informations on Material Dialog API</p> <pre><code>// import MatDialog service\nconstructor(\nprivate dialog: MatDialog\n) { }\n</code></pre> <pre><code>// instantiate confirmation window\nthis.dialog.open(ConfirmationPopUpComponent, {\nwidth: '30%',\ndata: {\ntitle: 'your title',\ncontent: 'your content'\n}\n}).afterClosed().subscribe((validation: boolean) =&gt; {\n// Your logic after user response\n});\n</code></pre>"},{"location":"angular/components/components/#input-with-suggestions","title":"Input-with-suggestions","text":"<p>Input-with-suggestions component is a simple input container who display suggestions depends to user's input, this component waiting for two args:</p> Name Type Description optional data InputWithSuggestionsData Suggestions data false selectEmitter (id: number) =&gt; void function who catch user's selection true <pre><code>// one suggestion\ninterface InputWithSuggestionsElement {\n// if you want specif icon before element's name\nicon?: string;\n// name of the element\ncontent: string;\n// id of the element\nobjectId: number;\n}\n\ninterface InputWithSuggestionsData  {\n// label of input\nlabel: string;\nelements: InputWithSuggestionsElement[];\n}\n</code></pre> <p>```typescript tab=\"Typescript\"</p> <pre><code>```html tab=\"HTML\"\n&lt;app-input-with-suggestions\n    [data]=\"inputWithSuggestionsData\"\n    (selectEmitter)=\"addUserById($event)\"&gt;\n&lt;/app-input-with-suggestions&gt;\n</code></pre>"},{"location":"angular/components/components/#settings-control-barcomponent","title":"Settings-control-bar.component","text":"<p>```html tab=\"HTML\"  <pre><code>## list.component\n\nList.component is a container that wraps a series of line items, this component waiting for two args:\n\n| Name | Type | Description | optional |\n|-------|------------|-----|-----------|\n| headerList | string[] | List's header | false |\n| rowsList | ListRowElement[] | A table of row | false |\n| elementByPage | number | Nuimber of element by page | true |\n\n```typescript\n// all rows\ninterface ListRowElement {\n  text?: string;\n  level?: StatusLevel;\n}\n// row\ninterface ListRow {\n  rowElement: ListRowElement[];\n}\n</code></pre></p> <pre><code>  &lt;app-list\n    *ngIf=\"rowsList\"\n    class=\"myrtea-list-container\"\n    [headerList]=\"headerList\"\n    [rowsList]=\"rowsList\"&gt;\n  &lt;/app-list&gt;\n</code></pre>"},{"location":"angular/components/components/#input-with-suggestions_1","title":"Input-with-suggestions","text":"<p>Input-with-suggestions component is a simple input container who display suggestions depends to user's input, this component waiting for two args: </p> Name Type Description optional data InputWithSuggestionsData Suggestions data false selectEmitter (id: number) =&gt; void function who catch user's selection true <pre><code>// one suggestion\ninterface InputWithSuggestionsElement {\n// if you want specif icon before element's name\nicon?: string;\n// name of the element\ncontent: string;\n// id of the element\nobjectId: number;\n}\n\ninterface InputWithSuggestionsData  {\n// label of input\nlabel: string;\nelements: InputWithSuggestionsElement[];\n}\n</code></pre> <pre><code>  &lt;app-input-with-suggestions\n    [data]=\"inputWithSuggestionsData\"\n    (selectEmitter)=\"addUserById($event)\"&gt;\n  &lt;/app-input-with-suggestions&gt;\n</code></pre>"},{"location":"angular/components/components/#settings-control-barcomponent_1","title":"Settings-control-bar.component","text":"<pre><code>  &lt;app-settings-control-bar\n    class=\"myrtea-settings-page-control-bar\"\n    controlTitle=\"your title\"\n    [noMoreOptions]=\"creationMode\"\n    [updateModifiedState]=\"factEditForm &amp;&amp; factEditForm.dirty\"\n    (return)=\"return()\"\n    (save)=\"save()\"\n    (cancel)=\"cancel()\"\n    (delete)=\"delete()\"&gt;\n  &lt;/app-settings-control-bar&gt;\n</code></pre>"},{"location":"angular/components/list-component/","title":"list.component","text":"<p>List.component is a container that wraps a series of line items, this component waiting for two args:</p> Name Type Description optional headerList string[] List's header false rowsList ListRowElement[] A table of row false elementByPage number Nuimber of element by page true <pre><code>// all rows\ninterface ListRowElement {\ntext?: string;\nlevel?: StatusLevel;\n}\n// row\ninterface ListRow {\nrowElement: ListRowElement[];\n}\n</code></pre> <p>```typescript  tab=\"Typescript\"</p> <pre><code>```html tab=\"HTML\"\n&lt;app-list\n    *ngIf=\"rowsList\"\n    class=\"myrtea-list-container\"\n    [headerList]=\"headerList\"\n    [rowsList]=\"rowsList\"&gt;\n&lt;/app-list&gt;\n</code></pre>"},{"location":"angular/services/header-service/","title":"header.service","text":"<p>This service for manage header (header's title and visibility)</p> <pre><code>constructor(\nprivate headerService: HeaderService\n) { }\n</code></pre> <pre><code>// change the title\nthis.headerService.changeTitle('Your title');\n</code></pre> <pre><code>// change the visibility\nthis.headerService.changeVisibility(false);\n\n// don't forget to set visibility true in onDestroy\nngOnDestroy() {\nthis.headerService.changeVisibility(true);\n}\n</code></pre>"},{"location":"angular/services/network-service/","title":"network.service","text":"<p>This service is use for all the http request to the backend</p> <pre><code>constructor(\nprivate networkService: NetworkService\n) { }\n</code></pre>"},{"location":"angular/services/permission-service/","title":"Permission Service","text":"<p>Warning</p> <p>The permission service can only be use in the constructor of shared module, permission can be use in hasRight directive or RoleGuardService</p>"},{"location":"angular/services/permission-service/#create-permission","title":"Create permission","text":"<p>First, you'll create a new permission for both your pages and actions. In order to do it add the permission in the following file : custom-permission.ts</p> <pre><code>export enum CustomPermission {\n//add permission in this enumeration\nviewCustom = 'view.custom',\n}\n</code></pre>"},{"location":"angular/services/permission-service/#manage-permission","title":"Manage permission","text":""},{"location":"angular/services/permission-service/#create-group","title":"Create group","text":"<p>A group of permissions need to be linked with a real group available in administration interface (linked by name).</p> <pre><code>this.permissionService.addGroup(\n// group name\n'CUSTOM',\n// list of permissions\n[\nCustomPermission.viewCustom,\nMyrteaPermission.viewHome\n]\n);\n</code></pre>"},{"location":"angular/services/permission-service/#add-permission-in-group","title":"Add permission in group","text":"<pre><code>this.permissionService.addPermissions(\n'ADMIN',\n[ CustomPermission.viewCustom ]\n);\n</code></pre>"},{"location":"angular/services/permission-service/#remove-permissions-in-group","title":"Remove permissions in group","text":"<pre><code>this.permissionService.removePermissions(\n'ADMIN',\n[ MyrteaPermission.viewSettings ]\n);\n</code></pre>"},{"location":"angular/services/permission-service/#replace-permission-in-group","title":"Replace permission in group","text":"<p>You can replace all permisions in group with replacePermissions function:</p> <pre><code>this.permissionService.replacePermissions(\n'USER',\n[\nMyrteaPermission.viewHome,\nCustomPermission.viewCustom\n]\n);\n</code></pre>"},{"location":"angular/services/permission-service/#remove-group","title":"Remove group","text":"<pre><code>this.permissionService.removeGroup('USER');\n</code></pre>"},{"location":"angular/services/search-service/","title":"Search Service","text":"<p>This service may help you doing some researches on about situations but also to formate the obtained results depending on its needs.</p> <pre><code>import { SearchService } from '@shared/search/services/search.service';\n\nconstructor(\nprivate searchService: SearchService\n) { }\n</code></pre>"},{"location":"angular/services/search-service/#search","title":"Search","text":"<p>In order ta make a search use a search function wich wait for a SearchRequestBody object.</p> Name Type Description optional situationId number Situation id false situationInstanceId number Situation instance id true time string Time to search true start string Date of the begin of the results true end string Date of the end of the results true facts string boolean string[] Filters true metaDatas string boolean string[] Filters true parameters string boolean string[] Filters true <pre><code>// searchBody instance of SearchRequestBody\nthis.searchService.search(searchBody).subscribe((searchResults: SearchResult[]) =&gt; {\n// your logic with result\n});\n</code></pre>"},{"location":"angular/services/search-service/#transform-result","title":"Transform result","text":""},{"location":"angular/services/search-service/#transform-result-to-use-in-list-component","title":"Transform result to use in List component","text":"<p>You can transform SituationHistoryRecord into ListRowElement in ordre to use it in List-component.</p> <pre><code>public transformElement(\nsituationHistoryRecord: SituationHistoryRecord,\nsituationValueSearch: SituationValueSearch\n): ListRowElement\n</code></pre> <p>Example:</p> <pre><code>let rowElement: ListRowElement = this.searchService.transformElement(\nsituationHistoryRecord,\n{\n// For example we extract parameters value who has name flux\ntype: SituationValueType.PARAMETERS, key: 'flux'\n}\n);\n</code></pre>"},{"location":"architecture/architecture/","title":"Architecture","text":""},{"location":"architecture/architecture/#internal-components","title":"Internal components","text":"Component Ownership Technology Default exposed port Engine-API Internal Go (1.14) 9000 Ingester-API Internal Go (1.14) 9001 Explainer-API Internal Python (3.6) 9005 Web Interface Internal Angular (8.0) served by Nginx 80, 443 Connectors Internal Multiple options (Go, Python, ...) N/A"},{"location":"architecture/architecture/#internal-or-provided-components","title":"Internal or Provided components","text":"Component Ownership Technology Default exposed port Elasticsearch Internal (or provided) Elasticsearch 6.x 9200, 9300 PostgreSQL Internal (or provided) PostgreSQL 5432"},{"location":"architecture/architecture/#external-components","title":"External components","text":"Component Ownership Technology Default exposed port Customer Oracle DB External Oracle 1521 Customer Kafka Brokers External Kafka 9092"},{"location":"development/stack-starting/","title":"Stack starting","text":""},{"location":"development/stack-starting/#start-the-apis","title":"Start the APIs","text":"<p>All APIs must be started with gateway mode enabled, using the following environment variables :</p> <pre><code>MYRTEA_API_ENABLE_SECURITY=true\nMYRTEA_API_ENABLE_GATEWAY_MODE=true\nMYRTEA_API_ENABLE_CORS=true\n</code></pre> <p>... Start the auth-api</p> <p>... Start the engine-api</p> <p>... Start the modeler-api</p>"},{"location":"development/stack-starting/#start-the-gateway","title":"Start the gateway","text":"<p>Download nginx-api-gateway.conf</p> <pre><code>docker run \\\n--rm \\\n--network=host \\\n--name nginx-api-gateway \\\n-v $(PWD)/nginx-api-gateway.conf:/etc/nginx/conf.d/default.conf \\\nnginx:alpine\n</code></pre>"},{"location":"development/stack-starting/#start-the-frontend","title":"Start the frontend","text":"<p>Edit the file <code>src/environments/environment.ts</code> and replace :</p> <pre><code>export const environment = { ... }\n</code></pre> <p>by</p> <pre><code>export const environment = {\nproduction: false,\nURL: 'http://localhost:9010/api/v4',\ndefaultLanguage: 'fr',\nclientLogo: '../assets/images/LogoWebApp.png',\nWS_URL: 'ws://localhost:9010/api/v4'\n};\n</code></pre> <p>The URL variable now targets the gateway port (<code>9010</code>).</p> <p>... Start the web interface project</p>"},{"location":"getting-started/business-rules-creation/","title":"Rules creation","text":"<p>We now have two clean facts, regrouped in a dedicated situation <code>breakdown_monitoring</code>.</p> <p>At this moment, situation's facts can be calculated, queried and displayed using some specific APIs.</p> <p>But in most business context, we want to trigger some notifications or alerts in case something wrong (or good !) happened.</p>"},{"location":"getting-started/business-rules-creation/#settings","title":"Settings","text":"<p>In our context, we want to create two rules based on the following specifications :</p>"},{"location":"getting-started/business-rules-creation/#first-rule","title":"First rule","text":"<p>Our first rule will check if the number of critical breakdown on the bluetooth component doesn't exceed a specific threshold (10). In case the threshold is exceeded, we want to be notified with a warning. In case the threshold is exceeded multiple time in a row, we only want 1 notify in a window of 6 hours.</p> <p>Expected settings :</p> <ul> <li>Name : <code>breakdown_check_critical_bluetooth</code></li> <li>Parameters : <code>max_breakdown_threshold</code> = <code>10</code></li> <li>1 group of condition composed of :<ul> <li>A condition : <code>breakdown_count_total_daily.aggs.count_breakdown.value &gt; max_breakdown_threshold</code></li> <li>1 Set task : <code>breakdown_status</code> = <code>warning</code></li> <li>1 Issue task : <code>Too many breakdown detected</code> with level <code>warning</code> and a timeout of <code>6h</code></li> </ul> </li> </ul>"},{"location":"getting-started/business-rules-creation/#second-rule","title":"Second rule","text":"<p>Our second rule will check if the rate of critical breakdown on the bluetooth component doesn't exceed a specific threahold (25%). In case the threshold is exceeded, we want to raise a critical issue in Myrtea and to be notified. In case the threshold is exceeded multiple time in a row, we only want 1 notify in a window of 3 hours.</p> <p>The rate of critical breakdown is calculated with the following formula :</p> <pre><code>breakdown_count_critical_bluetooth_daily / breakdown_count_total_daily\n</code></pre> <p>Expected settings :</p> <ul> <li>Name : <code>breakdown_check_critical_bluetooth</code></li> <li>Parameters : <code>breakdown_rate_threshold</code> = <code>0.25</code></li> <li>1 group of condition composed of :<ul> <li>A condition : <code>breakdown_count_critical_bluetooth_daily.aggs.count_breakdown.value / breakdown_count_total_daily.aggs.count_breakdown.value &gt; breakdown_rate_threshold</code></li> <li>1 Set task : <code>breakdown_rate</code> = <code>breakdown_count_critical_bluetooth_daily.aggs.count_breakdown.value / breakdown_count_total_daily.aggs.count_breakdown.value</code></li> <li>1 Issue task : <code>Breakdown rate threshold exceeded</code> with level <code>warning</code> and a timeout of <code>3h</code></li> </ul> </li> </ul>"},{"location":"getting-started/business-rules-creation/#result-rule-1","title":"Result Rule 1","text":"<ul> <li>Overview</li> </ul> <ul> <li>Condition</li> </ul> <ul> <li>Notify Task</li> </ul> Want to use the JSON API ? <p>```json tab=\"POST /api/v4/engine/rules\" {     \"enabled\": true,     \"name\": \"breakdown_check_critical_bluetooth\",     \"title\": \"Bluetooth critical breakdown check\",     \"description\": \"No description (don't do that !)\",     \"parameters\": {         \"max_breakdown_threshold\": \"10\"     },     \"cases\": [         {             \"index\": 0,             \"name\": \"Max breakdown threshold exceeded\",             \"condition\": \"breakdown_count_total_daily.aggs.count_breakdown.value &gt; max_breakdown_threshold\",             \"tasks\": [                 {                     \"index\": 0,                     \"type\": \"set\",                     \"task\": {                         \"key\": \"breakdown_status\",                         \"value\": \"warning\"                     }                 },                 {                     \"index\": 1,                     \"type\": \"notify\",                     \"task\": {                         \"id\": \"breakdown_threshold_max_notify\",                         \"name\": \"Too many breakdown detected\",                         \"description\": \"No description\",                         \"level\": \"warning\",                         \"timeout\": \"6h\"                     }                 }             ]         }     ] } <pre><code>```json tab=\"POST /api/v4/engine/rules/1/situations\"\n[1]\n</code></pre></p>"},{"location":"getting-started/business-rules-creation/#result-rule-2","title":"Result Rule 2","text":"<ul> <li>Overview</li> </ul> <ul> <li>Condition</li> </ul> <ul> <li>Issue Task</li> </ul> Want to use the JSON API ? <p>```json tab=\"POST /api/v4/engine/rules\" {     \"cases\": [         {             \"index\": 0,             \"name\": \"Breakdown rate &gt; 25%\",             \"condition\": \"breakdown_count_critical_bluetooth_daily.aggs.count_breakdown.value / breakdown_count_total_daily.aggs.count_breakdown.value &gt; breakdown_rate_threshold\",             \"tasks\": [                 {                     \"index\": 0,                     \"type\": \"set\",                     \"task\": {                         \"key\": \"breakdown_rate\",                         \"value\": \"breakdown_count_critical_bluetooth_daily.aggs.count_breakdown.value / breakdown_count_total_daily.aggs.count_breakdown.value\"                     }                 },                 {                     \"index\": 1,                     \"type\": \"issue\",                     \"task\": {                         \"id\": \"breakdown_rate_issue\",                         \"name\": \"Breakdown rate threshold exceeded\",                         \"level\": \"critical\",                         \"timeout\": \"3h\",                         \"isNotification\": true                     }                 }             ]         }     ],     \"name\": \"breakdown_rate_check\",     \"description\": \"No description\",     \"title\": \"Breakdown rate check\",     \"enabled\": true,     \"parameters\": {         \"breakdown_rate_threshold\": \"0.25\"     } } <pre><code>```json tab=\"POST /api/v4/engine/rules/2/situations\"\n[1]\n</code></pre></p>"},{"location":"getting-started/data-ingestion/","title":"Ingest some data","text":"<p>Now that our <code>breakdown</code> model has been properly created, we can start to ingest some data to fill our model.</p> <p>Let's generate and push some breakdown event.</p> <p>To do so, we are doing to use the Ingester API as our single and only entrypoint for data ingestion.</p> <p>In a production context, we would use a proper standard or customized connector to read and extract data from the customer systems, and send the result data to the ingester API.</p> <p>To make some quick testing, we will directly work with the ingester API (using either cURL or the associated swagger GUI) and send some example datas.</p> <p>TODO:</p> <pre><code>curl -X POST -d '{\"\"}' http://localhost:9002/api/v4/ingester/data\n</code></pre>"},{"location":"getting-started/facts-creation/","title":"Facts creation","text":"<p>Now that we have indexed some data in our <code>breakdown</code> model, we can now start to tackle the most important parts, setting up a few facts.</p> <p>You can refer to the dedicated section Fact settings for more informations.</p>"},{"location":"getting-started/facts-creation/#settings","title":"Settings","text":"<p>Let's create a first fact named <code>breakdown_count_total_daily</code>. As the name suggests it, this fact will count the total number breakdown for the current day.</p> <ul> <li>A model : <code>breakdown</code></li> <li>An intent : <code>count</code> + <code>breakdown</code></li> <li>(No dimension)</li> <li>A condition :</li> <li><code>From</code> ( <code>date</code> : <code>startofday</code> )</li> </ul> <p>And a second fact named <code>breakdown_count_critical_bluetooth_daily</code>. As the name suggests it, this fact will count the number of critical breakdown, for the component \"bluetooth\", for the current day.</p> <ul> <li>A model : <code>breakdown</code></li> <li>An intent : <code>count</code> + <code>breakdown</code></li> <li>(No dimension)</li> <li>A condition :<ul> <li><code>And</code><ul> <li><code>For</code> ( <code>level</code> : <code>\"critical\"</code>)</li> <li><code>For</code> ( <code>component</code> : <code>\"bluetooth\"</code> )</li> <li><code>From</code> ( <code>date</code> : <code>startofday</code> )</li> </ul> </li> </ul> </li> </ul> <p>Note</p> <p>The words <code>\"critical\"</code> and <code>\"bluetooth\"</code> are wrapped with double-quote on purpose. In this context, they are used as strings, not as variables, and thus should be wrapped.</p> <p>The special token <code>startofday</code> allow to specify a date relative to the calculation date (in this case, the start of the current day).</p>"},{"location":"getting-started/facts-creation/#results","title":"Results","text":"<ul> <li>Fact <code>breakdown_count_critical_bluetooth_daily</code></li> </ul> Want to use the JSON API ? <p><code>json tab=\"POST /api/v4/engine/facts\" {}</code></p> <ul> <li>Fact <code>breakdown_count_total_daily</code></li> </ul> <p></p> Want to use the JSON API ? <p><code>json tab=\"POST /api/v4/engine/facts\" {}</code></p>"},{"location":"getting-started/model-creation/","title":"Create a new model","text":"<p>Before doing anything, it's important to understand that many components in the product are scopped by model. It is one of the segregation unit available to split the application content.</p> <p>You can refer to the dedicated section Model settings for more informations.</p>"},{"location":"getting-started/model-creation/#settings","title":"Settings","text":"<p>Now, let's create a new model named <code>breakdown</code> with the following fields :</p> <ul> <li>String <code>id</code></li> <li>String <code>level</code></li> <li>Datetime <code>date</code></li> <li>String <code>component</code></li> </ul> <p>We want to keep 30 days of data history, with a daily index rotation :</p> <ul> <li>Cron expression : <code>0 0 * * *</code> (Rotate the index once per day at midnight)</li> <li>Activate purge : <code>true</code> (Purge indices after a specific period of time)</li> <li>Indices rention before purge : <code>30</code> (days)</li> <li>Patch alias indices : <code>1</code> (days)</li> </ul>"},{"location":"getting-started/model-creation/#result","title":"Result","text":"Want to use the JSON API ? <p><code>json tab=\"POST /api/v4/modeler/models\" {     \"name\": \"breakdown\",     \"synonyms\": [ \"breakdown\", \"panne\" ],     \"fields\": [         {             \"name\": \"id\",             \"type\": \"string\",             \"synonyms\": [ \"id\" ]         },         {             \"name\": \"level\",             \"type\": \"string\",             \"synonyms\": [ \"level\", \"niveau\" ]         },         {             \"name\": \"date\",             \"type\": \"datetime\",             \"synonyms\": [ \"date panne\" ]         },         {             \"name\": \"component\",             \"type\": \"string\",             \"synonyms\": [ \"component\", \"composant\" ]         }     ],     \"elasticsearchOptions\": {         \"rollmode\": \"cron\",         \"rollcron\": \"0 0 * * *\",         \"enablePurge\": true,         \"purgeMaxConcurrentIndices\": 30,         \"patchAliasMaxIndices\": 1,         \"advancedSettings\": {             \"number_of_replicas\": \"0\",             \"number_of_shards\": \"1\"         }     } }</code></p>"},{"location":"getting-started/situation-creation/","title":"Situation creation","text":"<p>Now that we have indexed created some facts, we can create a logical regroupment for them, using a situation.</p> <p>You can refer to the dedicated section Situation settings for more informations.</p>"},{"location":"getting-started/situation-creation/#settings","title":"Settings","text":"<p>For now, we will only create a basic situation <code>breakdown_monitoring</code> with the two previously created facts.</p> <p>To prevent any access issue, we will also affect this situation to the default user group <code>administrators</code>.</p>"},{"location":"getting-started/situation-creation/#results","title":"Results","text":"<ul> <li>Situation <code>breakdown_monitoring</code></li> </ul> Want to use the JSON API ? <p><code>POST /api/v4/engine/situations</code> <pre><code>{\n\"name\": \"breakdown_monitoring\",\n\"isTemplate\": false,\n\"parameters\": {},\n\"facts\": [\n1,\n2\n],\n\"groups\": [\n1\n]\n}\n</code></pre></p>"},{"location":"security/general/","title":"General security principles","text":"<p>In myrtea, most of the security is supported by the internet standard JSON Web Tokens.</p>"},{"location":"security/general/#authentication-process","title":"Authentication process","text":"<ol> <li>A request is sent (commonly from the frontend) to require a security token (a JWT).<ul> <li>This request contains the user credentials, and will lead to a BASIC authentication (hence the usage of HTTPS in production !)</li> </ul> </li> <li>This authentication request is processed by the engine-API, which will check the user credentials against a standard user table in postgresql.</li> <li>If the user and his password are correct, a new JWT is generated and sent back to the caller.</li> <li>This JWT is subsequently added to every single request sent to the backend to ensure proper authorization.<ul> <li>As the standard require it, the token is inserted a the <code>Authorization</code> HTTP header with the value : <code>Bearer &lt;token&gt;</code></li> </ul> </li> <li>Every request is then checked by the engine-API to ensure that a JWT is present in the headers, and that this JWT is valid (not tampered, not expired, etc.)</li> </ol>"},{"location":"security/permissions/","title":"Myrtea - Syst\u00e8me de permission V2","text":"<p>Voir internals/security/permissions/permission.go</p>"},{"location":"security/permissions/#format-dune-permission","title":"Format d'une permission","text":"<p>Une permission se compose de trois param\u00e8tres <code>&lt;resource_type&gt; &lt;resource_id&gt; &lt;action&gt;</code> :</p> <ul> <li><code>resource_type</code> : Type de ressource</li> <li><code>resource_id</code> : Identifiant de la resource</li> <li><code>action</code> : Action possible sur la resource</li> </ul> <p>Exemples :</p> resource_type resource_id action resultat <code>*</code> <code>*</code> <code>*</code> Tous les droits, sur l'ensemble des ressources de tous les types <code>situation</code> <code>*</code> <code>*</code> Tous les droits sur l'ensemble des situation <code>situation</code> <code>3</code> <code>*</code> Tous les droits sur la situation 3 <code>situation</code> <code>3</code> <code>get</code> Droit en lecture sur la situation 3 <code>situation</code> <code>*</code> <code>get</code> Droit en lecture sur l'ensemble des situations <code>*</code> <code>*</code> <code>get</code> Droit en lecture sur l'ensemble des ressources de tous les types <code>frontend</code> <code>settings</code> <code>access</code> Sp\u00e9cifique au frontend, donnant la possibilit\u00e9 d'acc\u00e9der \u00e0 la resource <code>settings</code> (contenant l'ensemble du param\u00e9trage m\u00e9tier) <code>frontend</code> <code>supervision.perimetre1</code> <code>access</code> Sp\u00e9cifique au frontend, donnant la possibilit\u00e9 d'acc\u00e9der \u00e0 la resource <code>perimetre1</code>, contenu dans la resource <code>supervision</code>"},{"location":"security/permissions/#type-de-ressources","title":"Type de ressources","text":"resource_type description <code>*</code> Tous les types de resources <code>user</code> <code>role</code> <code>permission</code> <code>model</code> <code>fact</code> <code>situation</code> <code>situation_instance</code> <code>situation_fact</code> <code>situation_rule</code> <code>situation_issue</code> <code>rule</code> <code>scheduler</code> <code>calendar</code> <code>frontend</code> Ressource sp\u00e9cifique pour les composants frontend"},{"location":"security/permissions/#id","title":"ID","text":"resource_id description <code>*</code> Toutes les ressources (du type associ\u00e9) <code>1</code>, <code>2</code> Identifiant unique de la ressource <code>user-settings</code> Acces aux pr\u00e9f\u00e9rences utilisateurs <code>settings</code> Acces \u00e0 l'ensemble des \u00e9crans de param\u00e9trages m\u00e9tiers <code>settings.situation</code> Acces \u00e0 l'\u00e9cran de param\u00e9trage situation (Not implemented, yet) <code>administration</code> Acces au param\u00e9trage administrateur (utilisateurs, roles et permissions) <code>supervision</code> Acces \"custom\" \u00e0 la resource \"supervision\" (ainsi qu'\u00e0 tout ses sous-\u00e9l\u00e9ments) <code>supervision.perimetre1</code> Acces \"custom\" \u00e0 la resource \"perimetre1\", contenue dans la resource \"supervision\" (ainsi qu'\u00e0 tout ses sous-\u00e9l\u00e9ments) <code>supervision.perimetre1.onglet3</code> Acces \"custom\" \u00e0 la resource \"onglet3\", contenue dans la resource \"perimetre1\", contenue dans la resource \"supervision\" (ainsi qu'\u00e0 tout ses sous-\u00e9l\u00e9ments) <p>NB: Les ressources frontend sont g\u00e9r\u00e9es dans la majorit\u00e9 des cas commes des resources hi\u00e9rarchiques, un acc\u00e8s vers une ressource donne par d\u00e9faut acc\u00e8s \u00e0 tous les \"sous-ressources\" qu'elle contient.</p>"},{"location":"security/permissions/#action","title":"Action","text":"action description <code>*</code> Toutes les actions <code>list</code> R\u00e9cup\u00e9ration d'une liste d'objets, action utilis\u00e9e en compl\u00e9ment de (<code>get</code> <code>&lt;id&gt;</code> <code>&lt;type&gt;</code>) <code>get</code> R\u00e9cup\u00e9ration d'un objet sp\u00e9cifique <code>create</code> Cr\u00e9ation d'un objet <code>update</code> Mise \u00e0 jour d'un objet <code>delete</code> Suppression d'un objet <code>search</code> Recherche sur une situation <code>access</code> Acces \u00e0 une ressource web (en compl\u00e9ment du type <code>frontend</code>)"},{"location":"security/auth/basic/","title":"Basic authentication","text":""},{"location":"security/auth/saml/","title":"SAML authentication","text":""},{"location":"security/auth/saml/#service-provider-registration","title":"Service provider registration","text":"sequenceDiagram   participant User   participant SP   participant IDP    SP -&gt;&gt; IDP: Register with certs   SP -&gt;&gt;+ IDP: GET /metadatas   IDP -&gt;&gt;- SP: metadatas&lt;XML&gt;"},{"location":"security/auth/saml/#login-process","title":"Login process","text":"sequenceDiagram   User -&gt;&gt;+ SP: Access /hello    alt \"Has valid JWT\"     SP -&gt;&gt; User: Grant access to /hello    else \"Has no valid JWT\"     SP -&gt;&gt; User: return 401     User -&gt;&gt; SP: GET /login/saml     SP -&gt;&gt; User: Redirect to IDP     User -&gt;&gt;+ IDP: /idp/login     IDP -&gt;&gt;+ User: Return SAMLResponse&lt;XML&gt;     User -&gt;&gt;+ SP: /login/saml     SP -&gt;&gt;+ SP: Check SAMLResponse + Generate JWT     SP -&gt;&gt;+ User: Return JWT     User -&gt;&gt;+ SP: Access /hello     SP -&gt;&gt; User: Grant access to /hello   end"},{"location":"settings/business-rule/business-rule/","title":"Business rule settings","text":""},{"location":"settings/business-rule/business-rule/#parameters","title":"Parameters","text":""},{"location":"settings/business-rule/business-rule/#parameters-inheritance-priority","title":"Parameters inheritance priority","text":"<p>From the most prioritized to the least prioritized :</p> <ul> <li>Situation template instance parameters</li> <li>Situation global parameters (template or not)</li> <li>Business rule default parameters</li> </ul> <p>Example</p> <p>With the following settings context :</p> <ul> <li>Situation template instance<ul> <li>A = <code>1</code></li> </ul> </li> <li>Situation (global)<ul> <li>A = <code>10</code></li> <li>B = <code>20</code></li> </ul> </li> <li>Business rule (default)<ul> <li>A = <code>100</code></li> <li>B = <code>200</code></li> <li>C = <code>300</code></li> </ul> </li> </ul> <p>Final parameters after resolution :</p> <ul> <li>A = <code>1</code> (from the situation template instance)</li> <li>B = <code>20</code> (from the situation)</li> <li>C = <code>300</code> (from the business rule)</li> </ul>"},{"location":"settings/fact/fact/","title":"Fact settings","text":"<p>A fact is what we most commonly call a key performance indicator (or KPI), but it can also represent some other kind of informations.</p>"},{"location":"settings/fact/fact/#general-attributes","title":"General attributes","text":"<p>A fact must have a <code>name</code> (avoid special characters and whitespaces)</p> <p>A fact is always scoped to a single model. It is mandatory to continue on the next part the settings process.</p> <p>A fact is composed of three majors parts, which depends on the selected model:</p> <ul> <li>an intent (mandatory)</li> <li>some dimensions (optional)</li> <li>some conditions (optional)</li> </ul>"},{"location":"settings/fact/fact/#intent","title":"Intent","text":"<p>The intent guides how the fact should be calculated. The intent regroups two parameters :</p> <ul> <li>An operator : What operation do I want to do ? (A count, a sum, an average, etc.)</li> <li>A term : On what kind of data do I want to apply this operation ?</li> </ul> <p>Example</p> <ul> <li>I want to count how many breakdown I have [...]</li> <li>I want to calculate the average of all my product prices [...]</li> </ul> <p>Warning</p> <p>Currently, in v4.0.0, there is no validation on the consistency between the operator and the term of intents.</p> <p>For example, \"the Sum of all breakdown date\" would be valid during the settings phase, but cannot be calculated</p>"},{"location":"settings/fact/fact/#supported-fact-operators","title":"Supported fact operators","text":"<p>Operators are pretty self explanatory :</p> <ul> <li><code>Count</code></li> <li><code>Average</code></li> <li><code>Sum</code></li> <li><code>Min</code></li> <li><code>Max</code></li> </ul>"},{"location":"settings/fact/fact/#supported-fact-terms","title":"Supported fact terms","text":"<ul> <li>Any field of a model</li> <li>The selected model itself (which is only valid for the <code>count</code> operator)</li> <li>An advanced script</li> </ul>"},{"location":"settings/fact/fact/#fact-dimensions","title":"Fact dimensions","text":"<p>In specific context, a fact can be broken down based on specific analysis axis.</p> <p>As shown in the previous section, we can easily create a fact which <code>count</code> the number of <code>breakdown</code>. If we want the same count, but for each \"type\" of breakdown, we can add a new <code>dimension</code> to the fact.</p> <p>Example</p> <p>Basic fact without dimension :</p> <ul> <li>Result = <code>50</code></li> </ul> <p>Same fact with a new dimension \"type\" :</p> <ul> <li>Result<ul> <li><code>type1</code> = <code>15</code></li> <li><code>type2</code> = <code>25</code></li> <li><code>type3</code> = <code>10</code></li> </ul> </li> </ul> <p>A dimension is defined by :</p> <ul> <li>An operator</li> <li>A term</li> <li>Some options (which are optionnals)</li> </ul> <p>Warning</p> <p>Currently, in v4.0.0, there is no validation on the consistency between the operator and the term of dimensions.</p>"},{"location":"settings/fact/fact/#supported-condition-operators","title":"Supported condition operators","text":"Operator types Corresponding Option Comment <code>By</code> <code>Size</code> (number of element in the dimension) Based on an alphanumeric field <code>Histogram</code> <code>Interval</code> (numeric interval between each element in the dimension) Based on a numeric field <code>Date Histogram</code> <code>Date interval</code> (Duration interval between each element in the dimension) Based on a date or datetime field"},{"location":"settings/fact/fact/#fact-condition","title":"Fact Condition","text":"<p>The condition describe how the data must be filtered before executing the intent operation.</p> <p>It is build in the form of a condition tree based on :</p> <ul> <li>Group conditions (or structure conditions)</li> <li>Leaf conditions</li> </ul>"},{"location":"settings/fact/fact/#fact-group-condition","title":"Fact group condition","text":"<p>A group condition is described by :</p> <ul> <li>a logic boolean operator</li> <li>some children conditions</li> </ul> Operator Comment <code>And</code> All children conditions must be met. Must have at least 2 children conditions <code>Or</code> Any children condition must be met. Must have at least 2 children conditions <code>Not</code> Behave like a standard logical NOT operator (reverse the result of the children condition). If there are multiple children conditions under this operator, it behave exactly like a <code>Not</code> containing an <code>And</code>, which contains all children conditions <code>If</code> If the associated <code>expression</code> is evaluated as <code>true</code>, all children conditions are added to the condition tree. If not, children conditions are discarded."},{"location":"settings/fact/fact/#fact-leaf-condition","title":"Fact leaf condition","text":"<p>A Leaf condition is a terminal condition, which cannot have children condition. Based on the condition type, it is described by the following parameters :</p> Operator Field Value Value 2 Comment <code>Exists</code> Check if a field exists <code>For</code> Check if a field value is equals to a value provided in input <code>From</code> Check if a field value is greater than a value provided in input <code>To</code> Check if a field value is lower than a value provided in input <code>Between</code> Check if a field value is between two values provided in input <code>Script</code> Special \"free text input\" for advanced script {style=\"display:none;\"} {style=\"display:none;\"} Check if the script output is true <p>Example</p> <p>The data must have :</p> <ul> <li>a <code>type</code> field,</li> <li>a <code>label</code> not equals to <code>\"type1\"</code></li> <li>a <code>price</code> between <code>10</code> and <code>50</code>, or an <code>amount</code> greater than <code>25</code></li> </ul> <p>Which lead to the following condition tree :</p> <ul> <li><code>And</code><ul> <li><code>Exists</code> ( <code>type</code> )</li> <li><code>Not</code><ul> <li><code>For</code> ( <code>label</code> : <code>\"type1\"</code> )</li> </ul> </li> <li><code>Or</code><ul> <li><code>Between</code> ( <code>price</code> : <code>10</code> - <code>50</code>)</li> <li><code>From</code> ( <code>amount</code> : <code>25</code> )</li> </ul> </li> </ul> </li> </ul> <p>Warning</p> <p>Currently, in v4.0.0, there is no validation on the consistency between the operator, the field and the values of leaf conditions.</p>"},{"location":"settings/fact/fact/#special-tokens","title":"Special tokens","text":"<p>See Tokens and functions</p>"},{"location":"settings/fact/fact/#special-functions","title":"Special functions","text":"<p>See Tokens and functions</p>"},{"location":"settings/fact/fact/#special-elasticsearch-date-operators","title":"Special Elasticsearch date operators","text":"<p>Warning</p> <p>Support for this kind of operators will be deprecated in v4.0.0.</p> <p>Please use dedicated special function <code>calendar_add(&lt;date&gt;, &lt;duration&gt;)</code> (See Tokens and functions)</p> Condition Description <code>now + \"               || -2d\"</code> Concatenate a date with a static elasticsearch math operation (here <code>\" || -2d\"</code>). The double-quotes are required to concatenate the math operation to the date"},{"location":"settings/fact/fact/#calculation-depth","title":"Calculation depth","text":"<p>TODO:</p>"},{"location":"settings/fact/fact/#templating-and-parameters","title":"Templating and parameters","text":"<p>Imagine we want to create multiple variations of a single fact.</p> <p>The way the calculations are done is the same between all the variations of the fact, with only a few filter changes.</p> <p>Example</p> <ul> <li>I want to <code>count</code> the <code>breakdown</code> for the <code>component</code> = <code>bluetooth</code>.</li> <li>I want to <code>count</code> the <code>breakdown</code> for the <code>component</code> = <code>wifi</code>.</li> <li>I want to <code>count</code> the <code>breakdown</code> for the <code>component</code> = <code>screen</code>.</li> </ul>"},{"location":"settings/fact/fact/#create-a-fact-template","title":"Create a fact template","text":"<p>Instead, we would build a single template fact :</p> <ul> <li>I want to <code>count</code> the <code>breakdown</code> for the <code>component</code> = <code>X</code>, where <code>X</code> is a parameter (which can be substituted for any component name).</li> </ul> <p>To build this fact, the following steps are required :</p> <ul> <li>The fact can must tagged as a template to indicate that the fact contains a parameter. Thus, the fact cannot be calculated anymore, without the required parameters values.</li> <li>The related condition must be changed :<ul> <li>From <code>for</code> ( <code>component</code> : <code>\"wifi\"</code> )</li> <li>To <code>for</code> ( <code>component</code> : <code>component_name</code> )<ul> <li>with <code>component_name</code> the external parameter name.</li> </ul> </li> </ul> </li> </ul> <p>Note</p> <p>Parameters used in conditions must not wrapped with double-quotes.</p> <p>In this case, the filter is not done on the string <code>\"component_name\"</code>, but on the parameter <code>component_name</code>.</p>"},{"location":"settings/fact/fact/#parameters-inheritance","title":"Parameters inheritance","text":"<p>The parameters values are inherited from the parent situation.</p>"},{"location":"settings/fact/supported-functions/","title":"Tokens and functions","text":""},{"location":"settings/fact/supported-functions/#special-tokens","title":"Special tokens","text":"Token Description <code>now</code> Current date. Use internal API execution time. <code>begin</code> <code>@Deprecated</code>. Still working for compatibility reason. Support timezone. <code>startofday</code> Start of the current day. Support timezone. <code>startofmonth</code> Start of the current month. Support timezone. <code>startofnextday</code> Start of the next day(End of the current day). Support timezone."},{"location":"settings/fact/supported-functions/#special-functions","title":"Special functions","text":"Function Description Example <code>length(&lt;array&gt;)</code> Return the length of the array <code>max(&lt;array&gt;)</code> Return the max value of the array <code>min(&lt;array&gt;)</code> Return the min value of the array <code>sum(&lt;array&gt;)</code> Return the sum value of the array <code>average(&lt;array&gt;)</code> Return the average value of the array <code>dayOfWeek(&lt;date&gt;)</code> Extract the day of week from a date (1 = monday, 7 = sunday) <code>dayOfWeek(now)</code> <code>day(&lt;date&gt;)</code> Extract the day from a date <code>day(now)</code> <code>month(&lt;date&gt;)</code> Extract the month from a date <code>month(now)</code> <code>year(&lt;date&gt;)</code> Extract the year from a date <code>year(now)</code> <code>startOf(&lt;date&gt;, &lt;option&gt;)</code> Return a transformed date base on the selection option. Support options are <code>\"day\"</code>, <code>\"month\"</code>,<code>\"year\"</code> <code>startOf(now, \"month\")</code> <code>endOf(&lt;date&gt;, &lt;option&gt;)</code> Return a transformed date base on the selection option. Support options are <code>\"day\"</code>, <code>\"month\"</code>,<code>\"year\"</code> <code>endOf(now, \"day\")</code> <code>datemillis(&lt;date&gt;)</code> Convert a date in milliseconds <code>datemillis(now)</code> <code>calendar_add(&lt;date&gt;, &lt;duration&gt;)</code> Add a duration to a specific date.Warning: <code>duration</code> only support Go duration format <code>calendar_add(now, \"-48h\")</code> <code>calendar_delay(&lt;date&gt;, &lt;date&gt;)</code> Compute the delay between two date, in milliseconds <code>calendar_delay(date1, date2)</code> <code>calendar_add_od(&lt;date&gt;, &lt;duration&gt; [, &lt;calendar&gt;])</code> Add a duration to a specific date, taking account of open days.Warning: <code>duration</code> only support Go duration <code>calendar_add(now, \"-48h\")</code> <code>calendar_delay_od(&lt;date&gt;, &lt;date&gt; [, &lt;calendar&gt;])</code> Compute the delay between two date, in milliseconds, taking account of open days <code>calendar_delay_od(date1, date2)</code>"},{"location":"settings/model/model/","title":"Model settings","text":"<p>A model is used to describe the structure of the data stored in a business application. For most usage, it is mandatory to declare at least one model.</p> <p>It is composed of the following options :</p> <ul> <li>Structures and types of all the datas, declared in the form of a tree</li> <li>Optional \"natural language synonyms\" for the assistant system</li> <li>Advanced options for the backend elasticsearch supporting the data storage (purge, indices rotation, ...)</li> </ul> <p>Facts are the backbone of a Myrtea application, but they can only be attached to a single model.</p> <p>Models must be built based on the target facts, using a top-down approach.</p>"},{"location":"settings/model/model/#data-structures-and-datatypes","title":"Data structures and Datatypes","text":""},{"location":"settings/model/model/#supported-field-types","title":"Supported field types","text":"Type Category Comment <code>string</code> Primitive Any alphanumeric chain <code>integer</code> Primitive Round number <code>float</code> Primitive Floating-point number <code>datetime</code> Primitive Date and time <code>object</code> Advanced Complex object with nested fields"},{"location":"settings/model/model/#field-leaf","title":"Field Leaf","text":"Attribute JSON Type Comment Example <code>name</code> String Field name <code>label</code> <code>type</code> String Field type (based on the previous table) <code>string</code> <code>synonyms</code> Array of String Liste de synonymes m\u00e9tier pour le mod\u00e8le <code>[\"label\", \"title\"]</code>"},{"location":"settings/model/model/#field-object","title":"Field Object","text":"Attribut JSON Values Description <code>name</code> String Nom du champ <code>type</code> String Object D\u00e9crit le type du champs <code>synonyms</code> Array of String Liste de synonymes m\u00e9tier pour le mod\u00e8le synonyms dans un field objet ? plut\u00f4t dans l\u2019id ? <code>fields</code> Array of Object Liste de champs du mod\u00e8le <code>keepObjectSeparation</code> Boolean"},{"location":"settings/model/model/#elasticsearch-options","title":"Elasticsearch Options","text":"<ul> <li><code>Rotation mode</code><ul> <li>\"Cron\" is the only choice for now. The indices rotations is based on a cron expression.</li> <li>It is advised to stay on a daily rotation for now (cron : <code>0 0 * * *</code>)</li> </ul> </li> <li><code>Purge activation</code><ul> <li>Can be enabled or not</li> <li>Based on a second parameter \"Index count before purge\" to specify how many indices must be kept before any purge.</li> </ul> </li> <li><code>Alias patch depth</code><ul> <li>Used to specify the depth of a specific \"Patch Alias\" which target indices used for update on \"old\" data (stored in indices other than the current one)</li> </ul> </li> <li><code>Advanced options</code><ul> <li>Any other elasticsearch index options (ie: number_of_shards, number_of_replicas, ...)</li> </ul> </li> </ul>"},{"location":"settings/situation/situation/","title":"Situation settings","text":"<p>The notion of situation is one of the most important concept in Myrtea.</p> <p>Every facts is scoped to a specific model, but situations are not. The situations provide the opportunity to regroup informations from multiple sources and types.</p> <p>It is the main segregation mecanism between multiple business contexts. It allow to segregate access between user groups</p>"},{"location":"settings/situation/situation/#general-attributes","title":"General attributes","text":"<p>A situation must have a <code>name</code> (avoid special characters and whitespaces)</p>"},{"location":"settings/situation/situation/#facts-selections","title":"Facts selections","text":"<p>A situation is composed by multiple facts (and each fact can compose multiple situations).</p> <p>Each fact in a situation will inherit all the situation parameters. This is the main mecanism used to calculate fact templates.</p>"},{"location":"settings/situation/situation/#rules-selections","title":"Rules selections","text":"<p>A situation can be associated with multiple rules (and each rule can be associated with multiple situations).</p> <p>Each rule in a situation will inherit all the situation parameters. See more in Rule settings - Inheritance</p>"},{"location":"settings/situation/situation/#parameters-and-templating","title":"Parameters and templating","text":"<p>It is possible to flag a situation as template, in case multiple \"identical\" situations must be created, with only difference in parameters (but same facts, same rules, same groups)</p> <p>Instead of creating multiple situations, only one template is created.</p> <p>The template situation must be enriched with **situation instances\"\", which will describe each \"variations\" of the situations.</p> <p>A situation template instance is composed of :</p> <ul> <li>A name (avoid special characters and whitespaces)</li> <li>A list of parameters (common key-value format)</li> </ul> <p>Situation instance parameters always override the global situation parameters.</p>"},{"location":"technical/connectors/custom/","title":"Custom connector","text":""},{"location":"technical/connectors/kafka/","title":"Kafka connector","text":"<p>The Kafka pipeline is simple : </p> <p><code>Kafka -&gt; Sarama -&gt; Consumer -&gt; ConsumerProcesor -&gt; Sink -&gt; Ingester (external)</code></p> <ol> <li>Data is consumed by a custom Sarama consumer.</li> <li>Each topic is associated with a unique consumer processor.</li> <li>When the consumer receives a message, it is routed to the corresponding consumer processor.</li> <li>The message traverses through the processor and ultimately reaches the sink.</li> <li>The sink component receives a certain number of messages.</li> <li>Once the buffer is full, the sink sends these messages to the next step in the pipeline, which is the ingester.</li> </ol>"},{"location":"technical/connectors/sql/","title":"SQL connector","text":""},{"location":"technical/ingester/ingester/","title":"Ingester API","text":""},{"location":"technical/ingester/ingester/#a-closer-look-on-how-it-works","title":"A closer look on how it works","text":"<ol> <li>The application initiates an HTTP server that listens to a single route: /ingester/data.</li> <li>Upon receiving an HTTP request, the ingester waits for a specific request called BulkIngestRequest.</li> <li>The request is then forwarded to the BulkIngester, which searches for a TypedIngester associated with the document type.</li> <li>If the TypedIngester does not exist, a new one is created and launched as a separate task.</li> <li>Additionally, each new TypedIngester has a specified number of workers, referred to as INGESTER_MAXIMUM_WORKERS, which are also launched as separate tasks.</li> <li>The BulkIngester iterates through all the documents in the BulkIngestRequest and sends them through a channel to the corresponding TypedIngester.</li> <li>The TypedIngester hashes each incoming BulkIngestRequest using its UUID and selects a worker based on the hash value. The request is then transferred to the selected worker. Different types of workers, such as V6 and V7 for Elasticsearch retro compatibility, may be available.</li> <li>A worker waits for a request to be received through its channel. Once received, it adds the request to a buffer. When the buffer reaches its maximum capacity, the worker inserts the accumulated requests as a bulk operation into Elasticsearch.</li> </ol>"},{"location":"technical/ingester/ingester/#ingester-data-format","title":"Ingester data format","text":"<p>Info</p> <p>Currently, in v4.0.0, the only supported format is JSON.</p>"},{"location":"technical/ingester/ingester/#bulkingestrequest-structure","title":"BulkIngestRequest structure","text":"<pre><code>type BulkIngestRequest struct {\nUUID         string     `json:\"uuid\"`\nDocumentType string     `json:\"documentType\"`\nMergeConfig  []Config   `json:\"merge\"`\nDocs         []Document `json:\"docs\"`\n}\n</code></pre>"},{"location":"technical/ingester/ingester/#document-structure","title":"Document structure","text":"<pre><code>type Document struct {\nID        string      `json:\"id\"`\nIndex     string      `json:\"index\"`\nIndexType string      `json:\"type\"`\nSource    interface{} `json:\"source\"` // Most of the time a map[string]interface{}\n}\n</code></pre>"},{"location":"technical/ingester/ingester/#merge-config-structure","title":"Merge config structure","text":"<pre><code>// Config wraps all rules for document merging\ntype Config struct {\nMode             Mode    `json:\"mode\"`\nExistingAsMaster bool    `json:\"existingAsMaster\"`\nType             string  `json:\"type,omitempty\"`\nLinkKey          string  `json:\"linkKey,omitempty\"`\nGroups           []Group `json:\"groups,omitempty\"`\n}\n\n// Mode ...\ntype Mode int\nconst (\nSelf Mode = iota + 1\nEnrichTo\nEnrichFrom\n)\n</code></pre>"},{"location":"technical/ingester/ingester/#merge-config-group-structure","title":"Merge config group structure","text":"<pre><code>// Group allows to group un set of merge fields and to define an optional condition to applay the merge fields\ntype Group struct {\nCondition             string      `json:\"condition,omitempty\"`\nFieldReplace          []string    `json:\"fieldReplace,omitempty\"`\nFieldReplaceIfMissing []string    `json:\"fieldReplaceIfMissing,omitempty\"`\nFieldMerge            []string    `json:\"fieldMerge,omitempty\"`\nFieldKeepLatest       []string    `json:\"fieldKeepLatest,omitempty\"`\nFieldKeepEarliest     []string    `json:\"fieldKeepEarliest,omitempty\"`\nFieldMath             []FieldMath `json:\"fieldMath,omitempty\"`\n}\n\n// FieldMath specify a merge rule using a math expression\ntype FieldMath struct {\nExpression  string `json:\"expression\"`\nOutputField string `json:\"outputField\"`\n}\n</code></pre>"},{"location":"technical/ingester/ingester/#examples","title":"Examples","text":""},{"location":"technical/ingester/ingester/#ingest-a-new-project","title":"Ingest a new project","text":"<p>\"POST /api/v1/ingester/data\"</p> <pre><code>{\n\"uuid\": 1,\n\"document-type\": \"project\",\n\"merge\": [\n{\n\"mode\": \"self\",\n\"type\": \"project\"\n},\n],\n\"docs\": [\n{\"id\": \"1\", \"source\": {\"id\":\"project-1\", \"label\": \"A\"}}\n{\"id\": \"2\", \"source\": {\"id\":\"project-2\", \"label\": \"B\"}}\n{\"id\": \"3\", \"source\": {\"id\":\"project-3\", \"label\": \"C\"}}\n]\n}\n</code></pre>"},{"location":"technical/ingester/ingester/#update-existing-projects","title":"Update existing projects","text":"<p>\"POST /api/v1/ingester/data\"</p> <pre><code>{\n\"uuid\": 2,\n\"document-type\": \"project\",\n\"merge\": [\n{\n\"mode\": \"self\",\n\"type\": \"project\",\n\"groups\": [\n{\n\"condition\": \"true\",\n\"fieldReplace\": [\"label\"],\n\"FieldReplaceIfMissing\": [\"new_field\"]\n}\n]\n},\n],\n\"docs\": [\n{\"id\": \"2\", \"source\": {\"id\":\"project-2\", \"label\": \"New Label\"}}\n{\"id\": \"3\", \"source\": {\"id\":\"project-3\", \"new_field\": \"new field value\"}}\n]\n}\n</code></pre>"},{"location":"technical/ingester/ingester/#merge-configuration","title":"Merge configuration","text":"<p>General rules :</p> <ul> <li>In case \"existing doc\" is missing, no merge config is applied, the new document is sent \"as is\".</li> <li>In case a referenced field is missing in a function (<code>calendar_delay(..., ...)</code>, <code>calendar_add(..., ...)</code>, etc.), the function is skipped</li> </ul> Existing Doc(in Elasticsearch) FieldReplace [ \"a\" ]The field \"a\" is replaced FieldReplaceIfMissing [ \"a\" ]The field \"a\" is added only if missing FieldReplace [ \"a\" ]The field \"a\" is replaced FieldReplaceIfMissing [ \"a\" ]The field \"a\" is added only if missing ExistingAsMaster = TRUEThe existing document is the master and is enriched by the new document {style=\"display:none;\"} ExistingAsMaster = FALSEThe new document is the master and is enriched by the existing document {style=\"display:none;\"} Nil a = 30b = 50 a = 30b = 50 a = 30b = 50 a = 30b = 50 a = 1b = 2 a = 30b = 2 a = 1b = 2 a = 1b = 50 a = 30b = 50 b = 2 a = 30b = 2 a = 30b = 2 a = 30b = 50 a = 30b = 50 a = 1b = 2 a = 1b = 2 a = 1b = 2 a = 1b = 50 a = 1b = 50 b = 2 b = 2 b = 2 b = 50 b = 50"},{"location":"technical/ingester/ingester/#advanced-merge-configuration","title":"Advanced merge configuration","text":"New Doc(ingested) Existing Doc(in Elasticsearch) FieldMathcalendar_delay(Existing.date1, New.date2) FieldMathcalendar_delay(New.date1, Existing.date2) FieldMathcalendar_delay(Existing.date1, New.date2) FieldMathcalendar_delay(New.date1, Existing.date2) ExistingAsMaster = TRUEThe existing document is the master and is enriched by the new document {style=\"display:none;\"} ExistingAsMaster = FALSEThe new document is the master and is enriched by the existing document {style=\"display:none;\"} date1 = 2019-12-10date2 = 2019-12-15 Nil Not applicable Not applicable Not applicable Not applicable date2 = 2019-12-15 date1 = 2019-12-10 date1 = 2019-12-10delay = 5 Days Not applicable date1 = 2019-12-10delay = 5 Days Not applicable date1 = 2019-12-10 date2 = 2019-12-15 Not applicable date2 = 2019-12-15delay = 5 Days Not applicable date2 = 2019-12-15delay = 5 Days"},{"location":"technical/postgres/postgres/","title":"PostgreSQL tables","text":""},{"location":"technical/postgres/postgres/#schema","title":"Schema","text":"<p>[Schema PNG]</p>"},{"location":"technical/postgres/postgres/#list-of-tables","title":"List of tables","text":"Table Packaged ? Description <code>calendar_union_v1</code> Yes Missing description <code>calendar_v1</code> Yes Missing description <code>connectors_config_v1</code> No(*) Missing description <code>connectors_executions_log_v1</code> No(*) Missing description <code>elasticsearch_indices_v1</code> No(*) Missing description <code>fact_baseline_definition_v1</code> Yes Missing description <code>fact_baseline_v1</code> Yes Missing description <code>fact_definition_v1</code> Yes Missing description <code>fact_history_v1</code> No(*) Missing description <code>interaction_history_v1</code> No(*) Missing description <code>issue_detection_feedback_v3</code> No(*) Missing description <code>issue_resolution_draft_v1</code> No(*) Missing description <code>issue_resolution_v1</code> No(*) Missing description <code>issues_v1</code> No(*) Missing description <code>job_schedules_v1</code> Yes Missing description <code>model_v1</code> Yes Missing description <code>notifications_history_v1</code> No(*) Missing description <code>ref_action_v1</code> Yes Missing description <code>ref_rootcause_v1</code> Yes Missing description <code>rule_versions_v1</code> Yes Missing description <code>rules_v1</code> Yes Missing description <code>situation_definition_v1</code> Yes Missing description <code>situation_facts_v1</code> Yes Missing description <code>situation_history_v1</code> No(*) Missing description <code>situation_rules_v1</code> Yes Missing description <code>situation_template_instances_v1</code> Yes Missing description <code>user_groups_v1</code> Yes Missing description <code>user_memberships_v1</code> Yes Missing description <code>users_v1</code> Yes Missing description <p>(*) Table related to issue, usage or calculation history, and feedback are not packaged to avoid side effect during and after deployment in another environment.</p>"},{"location":"technical/postgres/postgres/#application-packaging","title":"Application packaging","text":""},{"location":"technical/postgres/postgres/#custom-format-binary-non-human-readable","title":"Custom format (binary, non human-readable)","text":"<p>```bash tab=\"Backup\"</p>"},{"location":"technical/postgres/postgres/#backup-procedure","title":"Backup procedure","text":""},{"location":"technical/postgres/postgres/#parameter-format-custom-is-used-to-specify-the-usage-of-psql-custom-format","title":"Parameter <code>--format custom</code> is used to specify the usage of psql custom format","text":"<p>pg_dump \\     --verbose \\     --format custom --compress 9 \\     --schema-only \\     --table calendar_union_v1 \\     --table calendar_v1 \\     --table connectors_config_v1 \\     --table connectors_executions_log_v1 \\     --table elasticsearch_indices_v1 \\     --table fact_baseline_definition_v1 \\     --table fact_baseline_v1 \\     --table fact_definition_v1 \\     --table fact_history_v1 \\     --table interaction_history_v1 \\     --table issue_detection_feedback_v3 \\     --table issue_resolution_draft_v1 \\     --table issue_resolution_v1 \\     --table issues_v1 \\     --table job_schedules_v1 \\     --table model_v1 \\     --table notifications_history_v1 \\     --table ref_action_v1 \\     --table ref_rootcause_v1 \\     --table rule_versions_v1 \\     --table rules_v1 \\     --table situation_definition_v1 \\     --table situation_facts_v1 \\     --table situation_history_v1 \\     --table situation_rules_v1 \\     --table situation_template_instances_v1 \\     --table user_groups_v1 \\     --table user_memberships_v1 \\     --table users_v1 \\     --host ${hostname} \\     --port ${port} \\     --username ${username} \\     ${dbname} &gt; myrtea.schema.dump.tar</p> <p>pg_dump \\     --verbose \\     --format custom --compress 9 \\     --data-only \\     --table fact_baseline_definition_v1 \\     --table fact_baseline_v1 \\     --table fact_definition_v1 \\     --table job_schedules_v1 \\     --table model_v1 \\     --table ref_action_v1 \\     --table ref_rootcause_v1 \\     --table rule_versions_v1 \\     --table rules_v1 \\     --table situation_definition_v1 \\     --table situation_facts_v1 \\     --table situation_rules_v1 \\     --table situation_template_instances_v1 \\     --table user_groups_v1 \\     --table user_memberships_v1 \\     --table users_v1 \\     --host ${hostname} \\     --port ${port} \\     --username ${username} \\     ${dbname} &gt; myrtea.data.dump.tar <pre><code>```bash tab=\"Restore\"\n# Restoration procedure\npg_restore \\\n    --verbose \\\n    --format custom \\\n    --schema-only \\\n    --host ${hostname} \\\n    --port ${port} \\\n    --username ${username} \\\n    --dbname ${dbname} &lt; myrtea.schema.dump.tar\n\npg_restore \\\n    --verbose \\\n    --format custom \\\n    --data-only \\\n    --host ${hostname} \\\n    --port ${port} \\\n    --username ${username} \\\n    --dbname ${dbname} &lt; myrtea.data.dump.tar\n</code></pre></p> <p>```bash tab=\"Clean\"</p>"},{"location":"technical/postgres/postgres/#cleaning-procedure","title":"Cleaning procedure","text":"<p>rm -f myrtea.schema.dump.tar myrtea.data.dump.tar <pre><code>### Plain-text format\n\nThe plain-text format (raw SQL) offers less features than the custom pg_dump format described in the previous section, and thus, should be mainly used for debugging.\n\n```bash tab=\"Backup\"\npg_dump \\\n    --table fact_baseline_definition_v1 \\\n    --table fact_baseline_v1 \\\n    --table fact_definition_v1 \\\n    --table job_schedules_v1 \\\n    --table model_v1 \\\n    --table ref_action_v1 \\\n    --table ref_rootcause_v1 \\\n    --table rule_versions_v1 \\\n    --table rules_v1 \\\n    --table situation_definition_v1 \\\n    --table situation_facts_v1 \\\n    --table situation_rules_v1 \\\n    --table situation_template_instances_v1 \\\n    --table user_groups_v1 \\\n    --table user_memberships_v1 \\\n    --table users_v1 \\\n    --username ${username} \\\n    ${dbname} &gt; dump.sql\n</code></pre></p> <p>```bash tab=\"Restore\"</p>"},{"location":"technical/postgres/postgres/#command-psql-must-be-used-in-this-case","title":"Command <code>psql</code> must be used in this case","text":"<p>psql \\     --username ${username} \\     ${dbname} &lt; dump.sql <pre><code>## Full dump (for support and debugging purpose)\n\n```bash tab=\"Backup\"\n# Backup procedure\npg_dump \\\n    --verbose \\\n    --format custom --compress 9 \\\n    --host ${hostname} \\\n    --port ${port} \\\n    --username ${username} \\\n    ${dbname} &gt; myrtea.full.dump.tar\n</code></pre></p> <p>```bash tab=\"Restore\"</p>"},{"location":"technical/postgres/postgres/#restoration-procedure","title":"Restoration procedure","text":"<p>pg_restore \\     --verbose \\     --format custom \\     --host ${hostname} \\     --port ${port} \\     --username ${username} \\     --dbname ${dbname} &lt; myrtea.full.dump.tar ```</p>"},{"location":"troubleshooting/troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/troubleshooting/#login-doesnt-work-on-the-web-application","title":"Login doesn't work on the web application","text":"<ul> <li>Check in postgres if the user has been properly created</li> <li>Check in postgers if the user password is correct with</li> <li><code>SELECT count(id) FROM users_v1 WHERE login = '&lt;user_login&gt;' AND (password=crypt('&lt;user_password&gt;', password));</code></li> <li>Check if the API's have been started with <code>API_ENABLE_CORS = true</code></li> <li>Check if both the web application and the backend are using the same API version</li> </ul>"}]}